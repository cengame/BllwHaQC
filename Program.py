from qiskit import QuantumRegister, ClassicalRegister, QuantumCircuit
from numpy import pi

qreg_h0 = QuantumRegister(1, 'h0')
qreg_h1 = QuantumRegister(1, 'h1')
creg_intrinsec = ClassicalRegister(2, 'intrinsec')
creg_entropic = ClassicalRegister(4, 'entropic')
creg_gauge = ClassicalRegister(8, 'gauge')
creg_markov = ClassicalRegister(16, 'markov')
creg_geomatr = ClassicalRegister(32, 'geomatr')
circuit = QuantumCircuit(qreg_h0, qreg_h1, creg_intrinsec, creg_entropic, creg_gauge, creg_markov, creg_geomatr)

circuit.reset(qreg_h1[0]).c_if(creg_intrinsec, 1)
circuit.h(qreg_h0[0])
circuit.rz(pi / 2, qreg_h0[0])
circuit.measure(qreg_h1[0], creg_geomatr[20])
circuit.id(qreg_h0[0])
circuit.measure(qreg_h1[0], creg_entropic[0])
circuit.csx(qreg_h1[0], qreg_h0[0])
circuit.sxdg(qreg_h1[0])
circuit.t(qreg_h0[0])
circuit.barrier(qreg_h0, qreg_h1)
# @phaseDisk
circuit.z(qreg_h0[0])
circuit.ry(pi / 2, qreg_h1[0])
circuit.cy(qreg_h1[0], qreg_h0[0])
circuit.rzz(pi / 2, qreg_h0[0], qreg_h1[0])
circuit.barrier(qreg_h0, qreg_h1)
# @phaseDisk
circuit.h(qreg_h0[0])
circuit.measure(qreg_h1[0], creg_geomatr[9])
circuit.rz(pi / 2, qreg_h0[0])
circuit.measure(qreg_h1[0], creg_markov[5])
circuit.t(qreg_h0[0])
circuit.measure(qreg_h1[0], creg_gauge[7])
circuit.cx(qreg_h1[0], qreg_h0[0])
circuit.rxx(pi / 2, qreg_h0[0], qreg_h1[0])
circuit.h(qreg_h0[0])
circuit.ry(pi / 2, qreg_h1[0])